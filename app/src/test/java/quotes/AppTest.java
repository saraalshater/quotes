/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import org.junit.jupiter.api.RepeatedTest;
import org.junit.jupiter.api.Test;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.List;
import java.util.function.Supplier;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }

    @Test
    public void testJsonReader() throws FileNotFoundException {

        BufferedReader reader = new BufferedReader(new FileReader("app/src/test/resources/recentquotes.json"));
        assertNotNull(
                "testJsonReader should return: ",
                String.valueOf(reader)
        );
    }
    @Test
    public void testConstructorQuote(){
        Quote quot = new Quote(null, "Sara", "infinite likes","All monsters are human");
        assertEquals(null, quot.getTags());
        assertEquals("Sara", quot.getAuthor());
        assertEquals("infinite likes", quot.getLIKES());
        assertEquals("All monsters are human", quot.getText());

    }

    @RepeatedTest(50)
    @Test
    public void testRandomQuote() throws FileNotFoundException{
        Gson gson = new Gson();
        int idx =0;
        BufferedReader reader = new BufferedReader(new FileReader("app/src/test/resources/recentquotes.json"));
        List<Quote> quote = gson.fromJson(reader, new TypeToken<List<Quote>>() {}.getType());
        int min = 0;
        int max = quote.size()-1 ;
        Quote quote1 = quote.get((int) (Math.random()*(max- min+1)+ min));
        for(int i = 0; i < quote.size(); i++) {
            if(quote.get(i).getText().equals(quote1.getText())){
                idx = i;
            }
        }
        assertTrue(idx >= 0 && idx < quote.size()-1 , "return true if successfully got a random quote from the json file ");
    }
}

